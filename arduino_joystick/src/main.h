#include <Arduino.h>
#include <DynamixelShield.h>
#include "Timing.cpp"

#if defined(ARDUINO_AVR_UNO) || defined(ARDUINO_AVR_MEGA2560)
  #include <SoftwareSerial.h>
  SoftwareSerial soft_serial(7, 8); // DYNAMIXELShield UART RX/TX
  #define DEBUG_SERIAL soft_serial
#elif defined(ARDUINO_SAM_DUE) || defined(ARDUINO_SAM_ZERO)
  #define DEBUG_SERIAL SerialUSB    
#else
  #define DEBUG_SERIAL Serial
#endif

const uint8_t DXL_ID_CNT = 4;
const uint8_t DXL_ID[DXL_ID_CNT] = {6, 2, 1, 4};

const float DXL_PROTOCOL_VERSION = 2.0;

DynamixelShield dxl; // Serial for arduino mega

//This namespace is required to use Control table item names
using namespace ControlTableItem;

const int baudrate_debug =  115200;
const int baudrate_dxl =  115200;
const int postionContolLoop = 10; // [ms]
const int printLoop = 20; // [ms]
const int changePositionLoop = 20; // [ms]

#define MIN_ARM_ANGLE = 45;      // [degrees]
#define MAX_ARM_ANGLE = 135;     // [degrees]

String inputString = "";         // a String to hold incoming data
bool stringComplete = false;  // whether the string is complete


String getValue(String data, char separator, int index);

// ----- SYNC READ and WRITE  - (from example code)
const uint8_t BROADCAST_ID = 254;

const uint16_t user_pkt_buf_cap = 128; // why 128? maybe not enough for 6 motors?
uint8_t user_pkt_buf[user_pkt_buf_cap];

// --- POSITION DATA TO READ --- 
// Starting address of the Data to read; Present Position = 132
const uint16_t SR_START_ADDR = 132;
// Length of the Data to read; Length of Position data of X series is 4 byte
const uint16_t SR_ADDR_LEN = 4;

// --- POSITION DATA TO WRITE --- 
// Starting address of the Data to write; Goal Position = 116
const uint16_t SW_START_ADDR = 116;
// Length of the Data to write; Length of Position data of X series is 4 byte
const uint16_t SW_ADDR_LEN = 4;

typedef struct sr_data{
  int32_t present_position;
} __attribute__((packed)) sr_data_t;

typedef struct sw_data{
  int32_t goal_position;
} __attribute__((packed)) sw_data_t;

sr_data_t sr_data[DXL_ID_CNT];
DYNAMIXEL::InfoSyncReadInst_t sr_infos;
DYNAMIXEL::XELInfoSyncRead_t info_xels_sr[DXL_ID_CNT];

sw_data_t sw_data[DXL_ID_CNT];
DYNAMIXEL::InfoSyncWriteInst_t sw_infos;
DYNAMIXEL::XELInfoSyncWrite_t info_xels_sw[DXL_ID_CNT];

// --------------

float poseUnit = 0.001534355; // [rad/RAW_DATA]
float setLegAngles[DXL_ID_CNT] = {2*PI/3, PI/3, 2*PI/3, PI/3}; 
float legAngles[DXL_ID_CNT] = {0, 0, 0, 0};

// there is 45 deg or PI/4 deg offset between motor angle and leg angle
float setMotorAngles[DXL_ID_CNT]; // 
float motorAngles[DXL_ID_CNT]; //


int startTime, currentTime, deltaTime;

float startAngle = PI/3; // 60 degs
float endAngle = 2*PI/3; // 120 dwgs
float stepAngle = PI/18; // 10 degs
int stepTotal = 0;
int stepLegs[DXL_ID_CNT] = {0,0,0,0};
boolean isAllScanned = false, startTheExperiment = false;
int goalCurrent = 150; // 10 for joystick, 150 for trajectory following

int currentTrajStep = 0;
int TrajSteps = 20;  // 20 steps except for circle it is 30!
String trajType = "serial"; // "serial", "roll", "pitch", "yaw", "circle", anything else for idle state

// Trajectory along roll angle (40 degrees)
float rollTrajectoryJoint1[20] = {116.38524086843246,121.96498633828315,135.50145406840858,152.50492764491108,160.48458762591054,159.37849729749666,158.55757318198567,145.9089905245565,126.05930149608952,115.91126260285407,111.03257390874435,84.02677109041231,65.9524367891795,71.32921698801391,70.39784210034907,72.27937054037073,71.85561695498268,77.68025220169042,96.94190270370063,116.38524086843246};

float rollTrajectoryJoint2[20] = {59.643018664074575,58.98577029679192,49.34682091772446,47.2383962087882,46.90157259529704,47.21952073676791,47.11644095849636,48.02502677463668,45.561860839861154,39.9937818308251,70.83263916204318,91.41138493686796,97.15658021563414,104.17124011894866,104.1146698190862,111.44414889751707,97.70626739670911,91.80414478238306,88.065958905566,59.643018664074575};

float rollTrajectoryJoint3[20] = {114.18937865707335,108.25617797469789,88.87582796792877,80.67699384759428,77.26135641760659,76.68504592665512,78.49543411006823,83.60348446800157,98.03564799499088,116.75508308137493,123.31848992530558,130.75627608113678,139.06447406593134,151.227413814201,152.7263475174227,151.85347980657662,148.31864988795022,135.06764701721417,124.07734066019991,114.18937865707335};

float rollTrajectoryJoint4[20] = {63.616695468163165,85.25153474619384,95.06334850103377,98.12540824151472,99.41548143929589,99.28653865575654,99.09505342186847,97.05221890694081,92.22702002887945,77.41529687475618,58.59050941234397,57.05973372484062,49.809367612792194,41.02880863960469,37.4081178355452,44.6094999097383,45.559176563571974,53.144920949597775,57.122715748950704,63.616695468163165};

// Trajectory along pitch angle (40 degrees)
float pitchTrajectoryJoint1[20] = {116.38524086843246,112.52788481615491,105.78339611285259,104.36067914436946,111.17601596926724,110.84780141679431,108.36801487614508,104.66102782619868,111.32463967376567,118.50128605236146,108.99285705588443,100.99587921618644,92.25219071260966,80.72588090838683,75.05921060901684,75.08200618495634,85.59435568513885,95.17861408157952,100.69350705858197,116.38524086843246};

float pitchTrajectoryJoint2[20] = {59.643018664074575,70.48127228562672,77.70964037932224,79.80441265645014,90.48575304518104,92.45057425370263,85.54592964829506,78.41257067308976,73.81948778551654,59.849840229686336,46.63992514240403,62.17208771856511,77.79113451127105,101.3088004996132,90.4964562980986,89.70297444634001,92.59744624632557,64.54275806446752,48.80540657366863,59.643018664074575};

float pitchTrajectoryJoint3[20] = {114.18937865707335,101.76561005369449,96.71845359760276,89.42558147520442,79.07585824062186,76.1673377091657,82.19169186005335,93.12310075961707,96.53137983014209,107.70029048213304,130.63836296691088,120.27948620600858,117.6492485110341,109.85674674439284,104.13391299292742,107.02179829485895,107.25231807422965,120.1735085203802,122.18946282919083,114.18937865707335};

float pitchTrajectoryJoint4[20] = {63.616695468163165,66.77645197288605,74.93427290931785,80.99720711712375,86.11831700681772,80.64799943303348,89.82490265759458,79.30929750155195,66.69765246221391,58.87876209884005,72.07250027983007,83.47842298830633,88.7399522178358,98.31584550296304,102.73624013485203,104.11182353374625,96.1519380985935,85.89924420693328,77.39349146355477,63.616695468163165};

// Trajectory along yaw angle (15 degrees)
float yawTrajectoryJoint1[20] = {116.38524086843246,121.0990696632327,126.167176494874,127.3294558855482,129.2949764348621,130.59283733009153,130.67699717213978,126.00080504016469,120.43858698089758,119.19390560541943,105.67494666587875,103.74925511498044,99.96862034168818,98.4125554459977,97.9555110456505,98.16606033234152,99.53098816933301,102.80486049909972,105.12454567757467,116.38524086843246};

float yawTrajectoryJoint2[20] = {59.643018664074575,52.03655896090145,70.33827573806916,75.57662808661634,78.95991160603299,78.66424810159529,77.72455653336294,71.01686136310553,47.69352101138182,55.577010968715655,50.56109073246244,56.826029061609944,53.228730995251695,50.13889609798031,49.773776850459484,49.32559643549494,51.59707276446465,57.60653928658754,55.86651330435722,59.643018664074575};

float yawTrajectoryJoint3[20] = {114.18937865707335,122.9114552466256,129.85572716093856,123.85527153899466,122.50360843584244,126.07460152450626,129.217459295275,126.59805363567533,124.82932536662925,117.06511463992491,112.12115506108321,105.81233629208948,94.21215141263842,96.07603144631186,98.24965545798061,96.42438270320027,98.39634724856913,102.89381253798662,108.37535442890406,114.18937865707335};

float yawTrajectoryJoint4[20] = {63.616695468163165,65.25401855374515,74.7219956814606,83.21848632835702,85.14492657342099,84.70050570691372,84.03386735306033,76.58781243090309,65.283407262326,66.0070246387459,56.10380112956187,55.10700336166761,54.55991507747189,50.33838176999289,50.25080876553903,48.98015503398091,52.69374536311425,55.299468390540774,55.644263459223374,63.616695468163165};

// Trajectory along circular roll and pitch angle (20 degrees)
float circleTrajectoryJoint1[30] = {116.38524086843246,118.39553553442842,112.23067165485355,112.51500887463334,110.99454056564363,110.81336675137379,123.26957864737608,139.30489184212595,158.63156600494466,131.98381383573587,124.22629468081676,116.35920878893951,111.70266704202555,104.43806462331426,95.50796010800164,96.54552415263774,89.21935082988912,88.16824729299469,83.8451134062945,83.68703315534661,84.00362895825157,89.79264116342395,88.16392499396174,96.91914885072633,110.81336675137379,110.99454056564363,112.51500887463334,112.23067165485355,118.39553553442842,116.38524086843246};

float circleTrajectoryJoint2[30] = {59.643018664074575,59.435542660700705,70.04863343303118,72.83027136959103,73.8221952803421,74.09690434059961,71.2833152473247,62.053154388525854,71.69694910095788,48.05264017382964,49.81675939008003,48.186475110553914,52.24119870997243,51.97779319955812,52.93812424075436,66.16717431169957,61.95603388117511,56.38915713828545,88.08699415380369,90.96199364978904,93.11969836022809,88.31340452904983,77.57685665982844,73.956798617332,74.09690434059961,73.8221952803421,72.83027136959103,70.04863343303118,59.435542660700705,59.643018664074575};

float circleTrajectoryJoint3[30] = {114.18937865707335,107.94930083150368,102.72949679206971,98.04440117445623,96.44002784839674,96.74794015872808,92.7878278710282,92.55283574893232,88.2596485180582,95.16765708093858,95.72522194401948,92.0014921667861,90.35490755229728,99.87874118619978,110.02374341820943,129.64666600635326,147.38246668120607,169.47425352098927,134.59402652310737,133.0367350610472,129.47137592135385,120.06091422611912,109.01812326324915,102.31622449060335,96.74794015872808,96.44002784839674,98.04440117445623,102.72949679206971,107.94930083150368,114.18937865707335};

float circleTrajectoryJoint4[30] = {63.616695468163165,58.975468025036264,67.66064432707412,64.31800846981362,67.06749799015685,68.60957143160518,74.24398856528033,79.58160413621336,85.35416084942291,93.22232853509006,93.09295645554164,93.22630949770824,93.1195010484109,89.86495867807577,85.50125224390811,82.44884694173044,81.08067986142177,75.13795954876736,63.947517588312266,58.21558291387658,52.900553061639286,44.7034650143852,47.115151833856864,62.846602104248326,68.60957143160518,67.06749799015685,64.31800846981362,67.66064432707412,58.975468025036264,63.616695468163165};

int potPin = A0;
float normalizedJoystickHeight = 0; // [0-1]
int testState = 0;